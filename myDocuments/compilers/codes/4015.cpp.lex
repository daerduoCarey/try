<Operate, #> <Keyword, include> <Operate, <> <Identifier, iostream> <Operate, >> <Operate, #> <Keyword, include> <Operate, <> <Identifier, cstdio> <Operate, >> <Operate, #> <Keyword, include> <Operate, <> <Identifier, cstdlib> <Operate, >> <Keyword, using> <Keyword, namespace> <Identifier, std> <Semicolon, ;> <Keyword, int> <Identifier, d> <Operate, [> <Number, 3> <Operate, ]> <Operate, [> <Number, 3> <Operate, ]> <Operate, => <OpenParen, {> <Number, 0> <CloseParen, }> <Operate, ,> <Identifier, x> <Operate, [> <Number, 3> <Operate, ]> <Operate, [> <Number, 3> <Operate, ]> <Operate, => <OpenParen, {> <Number, 0> <CloseParen, }> <Operate, ,> <Identifier, ans> <Operate, [> <Number, 3> <Operate, ]> <Operate, [> <Number, 3> <Operate, ]> <Operate, => <OpenParen, {> <Number, 0> <CloseParen, }> <Semicolon, ;> <Keyword, void> <Identifier, multi> <OpenParen, (> <CloseParen, )> <OpenParen, {> <Keyword, int> <Identifier, tmp> <Operate, [> <Number, 3> <Operate, ]> <Operate, [> <Number, 3> <Operate, ]> <Operate, => <OpenParen, {> <Number, 0> <CloseParen, }> <Semicolon, ;> <Keyword, for> <OpenParen, (> <Keyword, int> <Identifier, i> <Operate, => <Number, 1> <Semicolon, ;> <Identifier, i> <Operate, <=> <Number, 2> <Semicolon, ;> <Operate, ++> <Identifier, i> <CloseParen, )> <Keyword, for> <OpenParen, (> <Keyword, int> <Identifier, j> <Operate, => <Number, 1> <Semicolon, ;> <Identifier, j> <Operate, <=> <Number, 2> <Semicolon, ;> <Operate, ++> <Identifier, j> <CloseParen, )> <Keyword, for> <OpenParen, (> <Keyword, int> <Identifier, k> <Operate, => <Number, 1> <Semicolon, ;> <Identifier, k> <Operate, <=> <Number, 2> <Semicolon, ;> <Operate, ++> <Identifier, k> <CloseParen, )> <Identifier, tmp> <Operate, [> <Identifier, i> <Operate, ]> <Operate, [> <Identifier, j> <Operate, ]> <Operate, => <OpenParen, (> <Identifier, tmp> <Operate, [> <Identifier, i> <Operate, ]> <Operate, [> <Identifier, j> <Operate, ]> <Operate, +> <Identifier, ans> <Operate, [> <Identifier, i> <Operate, ]> <Operate, [> <Identifier, k> <Operate, ]> <Operate, *> <Identifier, x> <Operate, [> <Identifier, k> <Operate, ]> <Operate, [> <Identifier, j> <Operate, ]> <CloseParen, )> <Operate, %> <Number, 7> <Semicolon, ;> <Keyword, for> <OpenParen, (> <Keyword, int> <Identifier, i> <Operate, => <Number, 1> <Semicolon, ;> <Identifier, i> <Operate, <=> <Number, 2> <Semicolon, ;> <Operate, ++> <Identifier, i> <CloseParen, )> <Keyword, for> <OpenParen, (> <Keyword, int> <Identifier, j> <Operate, => <Number, 1> <Semicolon, ;> <Identifier, j> <Operate, <=> <Number, 2> <Semicolon, ;> <Operate, ++> <Identifier, j> <CloseParen, )> <Identifier, ans> <Operate, [> <Identifier, i> <Operate, ]> <Operate, [> <Identifier, j> <Operate, ]> <Operate, => <Identifier, tmp> <Operate, [> <Identifier, i> <Operate, ]> <Operate, [> <Identifier, j> <Operate, ]> <Semicolon, ;> <CloseParen, }> <Keyword, void> <Identifier, multi2> <OpenParen, (> <CloseParen, )> <OpenParen, {> <Keyword, int> <Identifier, tmp> <Operate, [> <Number, 3> <Operate, ]> <Operate, [> <Number, 3> <Operate, ]> <Operate, => <OpenParen, {> <Number, 0> <CloseParen, }> <Semicolon, ;> <Keyword, for> <OpenParen, (> <Keyword, int> <Identifier, i> <Operate, => <Number, 1> <Semicolon, ;> <Identifier, i> <Operate, <=> <Number, 2> <Semicolon, ;> <Operate, ++> <Identifier, i> <CloseParen, )> <Keyword, for> <OpenParen, (> <Keyword, int> <Identifier, j> <Operate, => <Number, 1> <Semicolon, ;> <Identifier, j> <Operate, <=> <Number, 2> <Semicolon, ;> <Operate, ++> <Identifier, j> <CloseParen, )> <Keyword, for> <OpenParen, (> <Keyword, int> <Identifier, k> <Operate, => <Number, 1> <Semicolon, ;> <Identifier, k> <Operate, <=> <Number, 2> <Semicolon, ;> <Operate, ++> <Identifier, k> <CloseParen, )> <Identifier, tmp> <Operate, [> <Identifier, i> <Operate, ]> <Operate, [> <Identifier, j> <Operate, ]> <Operate, => <OpenParen, (> <Identifier, tmp> <Operate, [> <Identifier, i> <Operate, ]> <Operate, [> <Identifier, j> <Operate, ]> <Operate, +> <Identifier, x> <Operate, [> <Identifier, i> <Operate, ]> <Operate, [> <Identifier, k> <Operate, ]> <Operate, *> <Identifier, x> <Operate, [> <Identifier, k> <Operate, ]> <Operate, [> <Identifier, j> <Operate, ]> <CloseParen, )> <Operate, %> <Number, 7> <Semicolon, ;> <Keyword, for> <OpenParen, (> <Keyword, int> <Identifier, i> <Operate, => <Number, 1> <Semicolon, ;> <Identifier, i> <Operate, <=> <Number, 2> <Semicolon, ;> <Operate, ++> <Identifier, i> <CloseParen, )> <Keyword, for> <OpenParen, (> <Keyword, int> <Identifier, j> <Operate, => <Number, 1> <Semicolon, ;> <Identifier, j> <Operate, <=> <Number, 2> <Semicolon, ;> <Operate, ++> <Identifier, j> <CloseParen, )> <Identifier, x> <Operate, [> <Identifier, i> <Operate, ]> <Operate, [> <Identifier, j> <Operate, ]> <Operate, => <Identifier, tmp> <Operate, [> <Identifier, i> <Operate, ]> <Operate, [> <Identifier, j> <Operate, ]> <Semicolon, ;> <CloseParen, }> <Keyword, void> <Identifier, mul> <OpenParen, (> <Keyword, int> <Identifier, k> <CloseParen, )> <OpenParen, {> <Keyword, while> <OpenParen, (> <Identifier, k> <CloseParen, )> <OpenParen, {> <Keyword, if> <OpenParen, (> <Identifier, k> <Operate, %> <Number, 2> <CloseParen, )> <Identifier, multi> <OpenParen, (> <CloseParen, )> <Semicolon, ;> <Identifier, multi2> <OpenParen, (> <CloseParen, )> <Semicolon, ;> <Identifier, k> <Operate, /=> <Number, 2> <Semicolon, ;> <CloseParen, }> <CloseParen, }> <Keyword, int> <Identifier, main> <OpenParen, (> <CloseParen, )> <OpenParen, {> <Keyword, int> <Identifier, a> <Operate, ,> <Identifier, b> <Operate, ,> <Identifier, n> <Semicolon, ;> <Identifier, scanf> <OpenParen, (> <String, "%d%d%d"> <Operate, ,> <Operate, &> <Identifier, a> <Operate, ,> <Operate, &> <Identifier, b> <Operate, ,> <Operate, &> <Identifier, n> <CloseParen, )> <Semicolon, ;> <Identifier, a> <Operate, %=> <Number, 7> <Semicolon, ;> <Identifier, b> <Operate, %=> <Number, 7> <Semicolon, ;> <Identifier, d> <Operate, [> <Number, 1> <Operate, ]> <Operate, [> <Number, 2> <Operate, ]> <Operate, => <Number, 1> <Semicolon, ;> <Identifier, d> <Operate, [> <Number, 2> <Operate, ]> <Operate, [> <Number, 1> <Operate, ]> <Operate, => <Identifier, b> <Semicolon, ;> <Identifier, d> <Operate, [> <Number, 2> <Operate, ]> <Operate, [> <Number, 2> <Operate, ]> <Operate, => <Identifier, a> <Semicolon, ;> <Identifier, x> <Operate, [> <Number, 1> <Operate, ]> <Operate, [> <Number, 2> <Operate, ]> <Operate, => <Number, 1> <Semicolon, ;> <Identifier, x> <Operate, [> <Number, 2> <Operate, ]> <Operate, [> <Number, 1> <Operate, ]> <Operate, => <Identifier, b> <Semicolon, ;> <Identifier, x> <Operate, [> <Number, 2> <Operate, ]> <Operate, [> <Number, 2> <Operate, ]> <Operate, => <Identifier, a> <Semicolon, ;> <Identifier, ans> <Operate, [> <Number, 1> <Operate, ]> <Operate, [> <Number, 1> <Operate, ]> <Operate, => <Identifier, ans> <Operate, [> <Number, 2> <Operate, ]> <Operate, [> <Number, 2> <Operate, ]> <Operate, => <Number, 1> <Semicolon, ;> <Identifier, mul> <OpenParen, (> <Identifier, n> <Number, -2> <CloseParen, )> <Semicolon, ;> <Identifier, printf> <OpenParen, (> <String, "%d\n"> <Operate, ,> <OpenParen, (> <Identifier, ans> <Operate, [> <Number, 2> <Operate, ]> <Operate, [> <Number, 1> <Operate, ]> <Operate, +> <Identifier, ans> <Operate, [> <Number, 2> <Operate, ]> <Operate, [> <Number, 2> <Operate, ]> <CloseParen, )> <Operate, %> <Number, 7> <CloseParen, )> <Semicolon, ;> <Keyword, return> <Number, 0> <Semicolon, ;> <CloseParen, }> 
